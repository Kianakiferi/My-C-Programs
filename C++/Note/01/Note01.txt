//引用函数
void Swap(int & x, int & y)
{
    int tmp = x;
    x = y;
    y = tmp;
}

//内联函数
inline int Test1(int x)
{
    cout<<"Number is:<< x << endl;
}
//主函数中可Test1(a)

-------------------------------------
//函数模板
#include <iostream>
using namespace std;
template<class T>
void Swap(T & x, T & y)
{
    T tmp = x;
    x = y;
    y = tmp;
}
int main()
{
    int n = 1, m = 2;
    Swap(n, m);  //编译器自动生成 void Swap (int &, int &)函数
    double f = 1.2, g = 2.3;
    Swap(f, g);  //编译器自动生成 void Swap (double &, double &)函数
    return 0;
}

//类成员函数模板
#include <iostream>

class object {
public:
    template<typename T>
    void print(const char *name, const T &v) {
        std::cout << name << ": " << v << std::endl;
    }
};

int main() {
    object o;
    o.print("name", "Crystal");
    o.print("age", 18);
}

//
